# Copyright 2018 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This is the main configuration file for the application.
# ~~~~~

appName = agent-client-authorisation
# Define any modules used here
play.modules.enabled += "com.kenshoo.play.metrics.PlayModule"
play.modules.enabled += "play.modules.reactivemongo.ReactiveMongoHmrcModule"
play.modules.enabled += "uk.gov.hmrc.agentclientauthorisation.GuiceModule"

# Global request handler
# ~~~~
play.http.requestHandler = "uk.gov.hmrc.agentclientauthorisation.ApiPlatformRequestHandler"


# Session Timeout
# ~~~~
# The default session timeout for the app is 15 minutes (900seconds).
# Updating this is the responsibility of the app - it must issue a new cookie with each request or the session will
# timeout 15 minutes after login (regardless of user activity).
# session.maxAge=900

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret = "OEnhsf68r4sPYzwz8LGjBCzetA5DVcgmHdFLJasBPVR66Z25Ei9AFhRP54Y2WN2d"

# Session configuration
# ~~~~~
application.session.httpOnly = false

application.session.secure = false

# The application languages
# ~~~~~
application.langs = "en"
#
# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
application.global = uk.gov.hmrc.agentclientauthorisation.MicroserviceGlobal

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router = prod.Routes
play.http.filters = "uk.gov.hmrc.agentclientauthorisation.Filters"

# Service Locator Registration.
appUrl = "http://agent-client-authorisation.protected.mdtp"

# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and 
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule. 

controllers {
  # 300 is the default, you may need to change this according to your needs
  confidenceLevel = 300

  com.kenshoo.play.metrics.MetricsController = {
    needsAuth = false
    needsLogging = false
    needsAuditing = false
  }

  uk.gov.hmrc.agentclientauthorisation.controllers.AgencyInvitationsController = {
    needsAuth = false
    needsAuditing = false
  }

  uk.gov.hmrc.agentclientauthorisation.controllers.NiClientInvitationsController = {
    needsAuth = false
    needsAuditing = false
  }

  uk.gov.hmrc.agentclientauthorisation.controllers.MtdItClientInvitationsController = {
    needsAuth = false
    needsAuditing = false
  }

  uk.gov.hmrc.agentclientauthorisation.controllers.sandbox.SandboxAgencyInvitationsController = {
    needsAuth = false
    needsAuditing = false
  }

  uk.gov.hmrc.agentclientauthorisation.controllers.sandbox.SandboxClientInvitationsController = {
    needsAuth = false
    needsAuditing = false
  }
  uk.gov.hmrc.agentclientauthorisation.controllers.RootController = {
    needsAuth = false
    needsAuditing = false
  }

  uk.gov.hmrc.agentclientauthorisation.controllers.sandbox.SandboxRootController = {
    needsAuth = false
    needsAuditing = false
  }

  uk.gov.hmrc.agentclientauthorisation.controllers.api.DocumentationController = {
    needsAuth = false
    needsAuditing = false
    needsLogging = false
  }

  uk.gov.hmrc.agentclientauthorisation.controllers.api.RamlController = {
    needsAuth = false
    needsAuditing = false
    needsLogging = false
  }

  uk.gov.hmrc.agentclientauthorisation.controllers.WhitelistController = {
    needsAuth = false
    needsAuditing = false
    needsLogging = false
  }
}

# Metrics plugin settings - graphite reporting is configured on a per env basis
metrics {
  name = ${appName}
  rateUnit = SECONDS
  durationUnit = SECONDS
  showSamples = true
  jvm = true
  enabled = true
}


# Microservice specific config

auditing {
  enabled = true
  traceRequests = true
  consumer {
    baseUri {
      host = localhost
      port = 8100
    }
  }
}

api.access {
    type = PRIVATE
    white-list.applicationIds = [00010002-0003-0004-0005-000600070008, 00090002-0003-0004-0005-000600070008]
}

mongodb {
  uri = "mongodb://localhost:27017/agent-client-authorisation"
}


microservice {
  metrics {
    graphite {
      host = graphite
      port = 2003
      prefix = play.${appName}.
      enabled = false
    }
  }

  services {
    service-locator {
      enabled = false
    }
    invitation {
      expiryDuration = 10 days
    }
  }

  whitelist {
    ips = ""
    enabled = false
  }
}

Dev {
  microservice {
    services {
      auth {
        host = localhost
        port = 8500
      }
      des {
        host = localhost
        port = 9904
        environment = test
        authorization-token = secret
      }
      service-locator {
        host = localhost
        port = 9602
      }
      relationships {
        host = localhost
        port = 9434
      }
      afi-relationships {
        host = localhost
        port = 9427
      }
    }
  }
}

Test {
  microservice {
    services {
      des {
        environment = test
        authorization-token = secret
      }
    }
  }
}

Prod {
  microservice {
    services {
      auth {
        host = auth.protected.mdtp
        port = 80
      }
      des {
        host = hods-proxy
        port = 80
        environment = noenv
        authorization-token = not-valid-token
      }
      service-locator {
        host = service-locator.protected.mdtp
        port = 80
        enabled = true
      }
      relationships {
        host = agent-client-relationships.protected.mdtp
        port = 80
      }
      afi-relationships {
        host = agent-fi-relationship.protected.mdtp
        port = 80
      }
    }
  }
}

mongo-async-driver {
  akka {
    log-dead-letters = 0
    log-dead-letters-during-shutdown = off
    loglevel = "WARNING"
  }
}
