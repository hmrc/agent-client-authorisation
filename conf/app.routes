# Agent routes
# --------------------------------
GET         /agencies/:arn/invitations/sent                                                   @uk.gov.hmrc.agentclientauthorisation.controllers.AgencyInvitationsController.getSentInvitations(arn: uk.gov.hmrc.agentmtdidentifiers.model.Arn, clientType: Option[String], service: Option[String], clientIdType: Option[String], clientId: Option[String], status: Option[uk.gov.hmrc.agentclientauthorisation.model.InvitationStatus], createdOnOrAfter: Option[LocalDate])
POST        /agencies/:arn/invitations/sent                                                   @uk.gov.hmrc.agentclientauthorisation.controllers.AgencyInvitationsController.createInvitation(arn: uk.gov.hmrc.agentmtdidentifiers.model.Arn)
GET         /agencies/:arn/invitations/sent/:invitationId                                     @uk.gov.hmrc.agentclientauthorisation.controllers.AgencyInvitationsController.getSentInvitation(arn: uk.gov.hmrc.agentmtdidentifiers.model.Arn, invitationId: uk.gov.hmrc.agentmtdidentifiers.model.InvitationId)
PUT         /agencies/:arn/invitations/sent/:invitationId/cancel                              @uk.gov.hmrc.agentclientauthorisation.controllers.AgencyInvitationsController.cancelInvitation(arn: uk.gov.hmrc.agentmtdidentifiers.model.Arn, invitationId: uk.gov.hmrc.agentmtdidentifiers.model.InvitationId)


GET         /agencies/references/uid/:uid                                                     @uk.gov.hmrc.agentclientauthorisation.controllers.AgentReferenceController.getAgentReferenceRecord(uid: String)
GET         /agencies/references/arn/:arn                                                     @uk.gov.hmrc.agentclientauthorisation.controllers.AgentReferenceController.getAgentReferenceRecordByArn(arn: uk.gov.hmrc.agentmtdidentifiers.model.Arn)
POST        /agencies/references/arn/:arn/clientType/:clientType                              @uk.gov.hmrc.agentclientauthorisation.controllers.AgencyInvitationsController.getInvitationUrl(arn: uk.gov.hmrc.agentmtdidentifiers.model.Arn, clientType: String)

GET         /known-facts/organisations/vat/:vrn/registration-date/:vatRegistrationDate        @uk.gov.hmrc.agentclientauthorisation.controllers.AgencyInvitationsController.checkKnownFactVat(vrn: uk.gov.hmrc.agentmtdidentifiers.model.Vrn, vatRegistrationDate: LocalDate)
GET         /known-facts/individuals/nino/:nino/sa/postcode/:postcode                         @uk.gov.hmrc.agentclientauthorisation.controllers.AgencyInvitationsController.checkKnownFactItsa(nino: uk.gov.hmrc.domain.Nino, postcode: String)
GET         /known-facts/individuals/:nino/dob/:dob                                           @uk.gov.hmrc.agentclientauthorisation.controllers.AgencyInvitationsController.checkKnownFactIrv(nino: uk.gov.hmrc.domain.Nino, dob: LocalDate)
GET         /known-facts/organisations/trust/:utr                                             @uk.gov.hmrc.agentclientauthorisation.controllers.AgencyInvitationsController.getTrustName(utr: uk.gov.hmrc.agentmtdidentifiers.model.Utr)

# Client routes
# --------------------------------
PUT         /clients/:clientIdType/:clientId/invitations/received/:invitationId/accept        @uk.gov.hmrc.agentclientauthorisation.controllers.ClientInvitationsController.acceptInvitation(clientIdType: String, clientId: String, invitationId: uk.gov.hmrc.agentmtdidentifiers.model.InvitationId)
PUT         /clients/:clientIdType/:clientId/invitations/received/:invitationId/reject        @uk.gov.hmrc.agentclientauthorisation.controllers.ClientInvitationsController.rejectInvitation(clientIdType: String, clientId: String, invitationId: uk.gov.hmrc.agentmtdidentifiers.model.InvitationId)
GET         /clients/:clientIdType/:clientId/invitations/received/:invitationId               @uk.gov.hmrc.agentclientauthorisation.controllers.ClientInvitationsController.getInvitation(clientIdType: String, clientId: String, invitationId: uk.gov.hmrc.agentmtdidentifiers.model.InvitationId)

GET         /clients/:service/:identifier/invitations/received                                @uk.gov.hmrc.agentclientauthorisation.controllers.ClientInvitationsController.getInvitations(service: String, identifier: String, status: Option[uk.gov.hmrc.agentclientauthorisation.model.InvitationStatus])

GET         /clients/invitations/uid/:uid                                                     @uk.gov.hmrc.agentclientauthorisation.controllers.AgentReferenceController.getInvitationsInfo(uid: String, status:  Option[uk.gov.hmrc.agentclientauthorisation.model.InvitationStatus])

# BTA status
# --------------------------------
GET         /status                                                                           @uk.gov.hmrc.agentclientauthorisation.controllers.ClientStatusController.getStatus

# Invitations
# --------------------------------
GET         /invitations/:invitationId                                                        @uk.gov.hmrc.agentclientauthorisation.controllers.InvitationsController.getInvitationById(invitationId: uk.gov.hmrc.agentmtdidentifiers.model.InvitationId)
